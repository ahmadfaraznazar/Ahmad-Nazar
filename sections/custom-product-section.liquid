<!-- product-section.liquid -->
<section class="product-section">
  <div class="section-heading">
    <h2>{{ section.settings.heading }}</h2>
  </div>
  <div class="product-grid">
    {% for product in collections[section.settings.collection_handle].products %}
      <div class="product-item" data-product='{{ product | json | escape }}'>
        <img src="{{ product.featured_image | img_url: '300x300' }}" alt="{{ product.title }}" width="300" height="300">
        <div class="plus-sign" onclick="event.stopPropagation(); openModalFromElement(this)">+</div>
        <a href="{{ product.url }}"></a>
      </div>
    {% endfor %}
  </div>
</section>

<!-- Modal for ordering -->
<div id="orderModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeModal()">&times;</span>

    <!-- Modal First Section: Description -->
    <div class="modal-flex-1">
      <div class="modal-img-container">
        <img id="modal-image" src="" alt="" width="120" height="140">
      </div>
      <div class="modal-text-container">
        <h2 id="modal-title"></h2>
        <p id="modal-price"></p>
        <p id="modal-description"></p>
      </div>
    </div>

    <!-- Modal Section 2: Color Picker -->
    <div class="modal-flex-2">
      <h2 class="modal-label">Color</h2>
      <div class="color-flex">
        <!-- Variant buttons will be added here by JavaScript -->
      </div>
    </div>

    <!-- Modal Section 3: Choose the size -->
    <div class="modal-flex-2">
      <h2 class="modal-label">Size</h2>
      <select id="size-dropdown">
        <option value="x-small">XS</option>
        <option value="small">S</option>
        <option value="medium">M</option>
        <option value="large">L</option>
        <option value="x-large">XL</option>
      </select>
    </div>

    <input type="hidden" id="selected-variant" value="">

    <!-- Add to cart button -->
    <button class="add-to-cart">ADD TO CART →</button>
  </div>
</div>

<style>
  .modal-label {
    font-family: 'jost', sans-serif;
    font-size: 14px;
  }

  #modal-content {
    max-width: 312px;
  }

  #modal-title {
    font-family: 'jost', sans-serif;
    font-size: 16px;
    font-weight: lighter;
    color: #000;
  }

  #modal-price {
    font-family: 'Lustria', serif;
    font-weight: bold;
    font-size: 16px;
    color: #000;
  }

  #modal-description {
    font-family: 'jost', sans-serif;
    font-weight: lighter;
    font-size: 12px;
    color: #000;
  }

  .modal-image {
    object-fit: cover;
  }

  .variant-btn {
    border: 2px solid;
    width: 129px;
    height: 40.5px;
    font-size: 18px;
    font-family: 'jost', sans-serif;
    margin: 5px;
    cursor: pointer;
  }

  .variant-btn:hover {
    background-color: #888;
  }

  .variant-btn:focus {
    background-color: #000;
    color: white;
  }

  .modal-flex-1 {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .modal-flex-2 {
    display: flex;
    flex-direction: column;
    margin-top: 20px;
  }

  .add-to-cart {
    border: none;
    padding: 12px 75px;
    background-color: #000;
    color: #fff;
    margin-top: 50px;
    font-size: 16px;
    font-family: 'jost', sans-serif;
    width: 100%;
    cursor: pointer;
  }

  .product-section {
    display: flex;
    flex-direction: column;
    padding: 90px 63px 39px;
    background-color: #FFFFFF;
  }

  .section-heading h2 {
    text-align: left;
    margin-bottom: 30px;
    font-size: 36px;
    font-family: 'Lustria', serif;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
  }

  .product-item {
    background-color: white;
    text-align: center;
    position: relative;
  }

  .product-item img {
    width: 100%;
    height: auto;
    border-bottom: 1px solid #ddd;
  }

  .plus-sign {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: white;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 24px;
    color: #000;
  }

  /* Modal styles */
  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
  }

  .modal-content {
    background-color: #ffffff;
    margin: 15% auto;
    padding: 12px 20px 20px 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
  }

  .custom-dropdown {
    position: relative;
    display: inline-block;
    width: 100%;
  }

  #size-dropdown {
    width: 100%;
    padding: 10px 40px 10px 10px;
    background-color: #fff;
    border: 1px solid #000;
    border-radius: 4px;
    appearance: none;
    font-size: 16px;
    color: #333;
    cursor: pointer;
  }

  /* Style the dropdown arrow */
  .custom-dropdown::after {
    content: "▼";
    font-size: 14px;
    color: #000;
    position: absolute;
    top: 50%;
    right: 10px;
    transform: translateY(-50%);
    background-color: #fff;
    border-left: 1px solid #000;
    padding: 10px;
    pointer-events: none;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .product-section {
      padding: 40px 17px 23px;
    }

    .section-heading h2 {
      text-align: center;
      margin-bottom: 20px;
      font-size: 24px;
    }

    .product-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>

<script>
  function formatMoney(cents) {
    var price = (cents / 100).toFixed(2);
    return "{{ shop.currency.symbol }}" + price;
  }

  function openModalFromElement(element) {
    const productItem = element.closest('.product-item');
    const productDataJson = productItem.getAttribute('data-product');
    const product = JSON.parse(productDataJson);
    openModal(product);
  }

  function openModal(product) {
    // Set product image
    const imageUrl = product.images && product.images.length > 0 ? product.images[0] : '';
    document.getElementById('modal-image').src = imageUrl;

    // Set product title
    document.getElementById('modal-title').innerText = product.title;

    // Set product price
    document.getElementById('modal-price').innerText = formatMoney(product.price);

    // Set product description
    document.getElementById('modal-description').innerText = product.description;

    // Display the modal
    document.getElementById('orderModal').style.display = 'block';

    // Dynamically add the variant buttons
    const variantContainer = document.querySelector('.color-flex');
    variantContainer.innerHTML = ''; // Clear any existing buttons

    if (product.variants && product.variants.length > 0) {
      product.variants.forEach(variant => {
        const button = document.createElement('button');
        button.className = 'variant-btn';
        button.dataset.color = variant.option2 ? variant.option2.toLowerCase() : '';
        button.dataset.variantId = variant.id;
        button.innerText = variant.option1 || 'Default';
        button.onclick = () => selectVariant(button, variant.id);

        // Set the border color to match the variant's color
        button.style.borderColor = variant.option2 ? variant.option2.toLowerCase() : '#000';

        // Append the button to the variant container
        variantContainer.appendChild(button);
      });
    }
  }

  function selectVariant(button, variantId) {
    // Deselect all buttons
    const buttons = document.querySelectorAll('.variant-btn');
    buttons.forEach(btn => {
      btn.style.backgroundColor = '';
      btn.style.color = '';
    });

    // Select the clicked button
    button.style.backgroundColor = 'black';
    button.style.color = 'white';

    // Store the selected variant ID
    document.getElementById('selected-variant').value = variantId;
  }

  function closeModal() {
    document.getElementById('orderModal').style.display = 'none';
  }
</script>

{% schema %}
{
  "name": "Product Section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading",
      "default": "Featured Products"
    },
    {
      "type": "collection",
      "id": "collection_handle",
      "label": "Select Collection"
    }
  ],
  "presets": [
    {
      "name": "Default Product Section",
      "category": "Custom"
    }
  ]
}
{% endschema %}
